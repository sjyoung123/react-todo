{"version":3,"sources":["atom.ts","components/CreateToDo.tsx","components/TodayTime.tsx","components/ToDo.tsx","components/ToDoOptions.tsx","components/TodoList.tsx","theme.ts","App.tsx","index.tsx"],"names":["Categories","categoryState","atom","key","default","TO_DO","toDoState","JSON","parse","localStorage","getItem","toDoSelector","selector","get","toDos","category","filter","toDo","CreateForm","styled","form","CreateInput","input","props","theme","textColor","PlusBtn","label","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","setValue","onSubmit","prev","text","id","Date","now","type","required","placeholder","htmlFor","icon","faPlus","TodayContainer","div","TodayDate","h1","TodayTimeText","span","TodayTime","useState","timeStampNow","setTimeStampNow","useEffect","setInterval","Number","toLocaleDateString","toLocaleTimeString","ToDoItem","li","SpanText","BtnContainer","ToDoBtn","button","accentColor","ToDo","targetIndex","onClick","event","name","currentTarget","findIndex","newToDo","newToDos","splice","DOING","faSyncAlt","faExclamationCircle","DONE","faCheckCircle","parentElement","prevToDos","faTrashAlt","Options","select","bgColor","Option","option","ToDoOptions","useRecoilState","setCategory","onInput","value","length","Container","ToDoListContainer","ToDoList","ul","TodoList","toDosValue","setItem","stringify","map","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","isDark","setIsDark","size","checked","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17522464.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nexport enum Categories {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n}\r\n\r\nexport interface IToDo {\r\n  text: string;\r\n  category: Categories;\r\n  id: number;\r\n}\r\n\r\nexport const categoryState = atom<Categories>({\r\n  key: \"category\",\r\n  default: Categories.TO_DO,\r\n});\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDo\",\r\n  default: JSON.parse(localStorage.getItem(\"TODO\") || \"[]\"),\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const category = get(categoryState);\r\n\r\n    return toDos.filter((toDo) => toDo.category === category);\r\n  },\r\n});\r\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { categoryState, toDoState } from \"../atom\";\r\n\r\nconst CreateForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 28%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${(props) => props.theme.textColor};\r\n  font-family: Fuzzy Bubbles;\r\n  border-radius: 5px;\r\n  padding: 5px 10px;\r\n  margin-right: 10px;\r\n  width: 0;\r\n  transition: all ease-in-out 0.5s;\r\n  &:focus {\r\n    border: 1px solid ${(props) => props.theme.textColor};\r\n    display: flex;\r\n    width: 100%;\r\n    transition: all ease-in-out 0.5s;\r\n  }\r\n`;\r\n\r\nconst PlusBtn = styled.label`\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${(props) => props.theme.textColor};\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nfunction CreateToDo() {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const category = useRecoilValue(categoryState);\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const onSubmit = ({ toDo }: IForm) => {\r\n    setToDos((prev) => [{ text: toDo, category, id: Date.now() }, ...prev]);\r\n    setValue(\"toDo\", \"\");\r\n  };\r\n  return (\r\n    <CreateForm onSubmit={handleSubmit(onSubmit)}>\r\n      <CreateInput\r\n        id=\"createToDo\"\r\n        type=\"text\"\r\n        {...register(\"toDo\", { required: \"Please write a To Do\" })}\r\n        placeholder=\"Write a To Do\"\r\n      />\r\n      <PlusBtn htmlFor=\"createToDo\">\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </PlusBtn>\r\n    </CreateForm>\r\n  );\r\n}\r\n\r\nexport default CreateToDo;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TodayContainer = styled.div`\r\n  width: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst TodayDate = styled.h1`\r\n  font-size: 38px;\r\n  margin-bottom: 15px;\r\n`;\r\nconst TodayTimeText = styled.span`\r\n  font-size: 28px;\r\n`;\r\n\r\nfunction TodayTime() {\r\n  const [timeStampNow, setTimeStampNow] = useState<number>();\r\n  useEffect(() => {\r\n    setInterval(() => setTimeStampNow(Date.now()), 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TodayContainer>\r\n        <TodayDate>\r\n          {timeStampNow\r\n            ? new Date(Number(timeStampNow)).toLocaleDateString()\r\n            : \"\"}\r\n        </TodayDate>\r\n        <TodayTimeText>\r\n          {timeStampNow\r\n            ? new Date(Number(timeStampNow)).toLocaleTimeString(\"it-IT\")\r\n            : \"\"}\r\n        </TodayTimeText>\r\n      </TodayContainer>\r\n    </>\r\n  );\r\n}\r\nexport default TodayTime;\r\n","import {\r\n  faCheckCircle,\r\n  faExclamationCircle,\r\n  faSyncAlt,\r\n  faTrashAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { Categories, IToDo, toDoState } from \"../atom\";\r\n\r\nconst ToDoItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n`;\r\n\r\nconst SpanText = styled.span`\r\n  margin-right: 20px;\r\n  max-width: 70%;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst BtnContainer = styled.div``;\r\n\r\nconst ToDoBtn = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n  svg {\r\n    color: ${(props) => props.theme.textColor};\r\n    &:hover {\r\n      color: ${(props) => props.theme.accentColor};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ToDo({ text, category, id }: IToDo) {\r\n  let targetIndex: number;\r\n\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const {\r\n      currentTarget: { name },\r\n    } = event;\r\n    setToDos((prev) => {\r\n      targetIndex = prev.findIndex((toDo) => toDo.id === id);\r\n      const newToDo = { text, id, category: name as IToDo[\"category\"] };\r\n      const newToDos = [...prev];\r\n      newToDos.splice(targetIndex, 1, newToDo);\r\n      return newToDos;\r\n    });\r\n  };\r\n  const onDelete = (event: React.FormEvent<HTMLButtonElement>) => {\r\n    const {\r\n      currentTarget: { parentElement },\r\n    } = event;\r\n    setToDos((prevToDos) => {\r\n      const deletedToDos = prevToDos.filter(\r\n        (toDos) => toDos.id !== Number(parentElement?.parentElement?.id)\r\n      );\r\n\r\n      return deletedToDos;\r\n    });\r\n  };\r\n  return (\r\n    <ToDoItem id={id as any}>\r\n      <SpanText>{text}</SpanText>\r\n      <BtnContainer>\r\n        {category !== Categories.DOING && (\r\n          <ToDoBtn name={Categories.DOING} onClick={onClick}>\r\n            <FontAwesomeIcon icon={faSyncAlt} />\r\n          </ToDoBtn>\r\n        )}\r\n        {category !== Categories.TO_DO && (\r\n          <ToDoBtn name={Categories.TO_DO} onClick={onClick}>\r\n            <FontAwesomeIcon icon={faExclamationCircle} />\r\n          </ToDoBtn>\r\n        )}\r\n        {category !== Categories.DONE && (\r\n          <ToDoBtn name={Categories.DONE} onClick={onClick}>\r\n            <FontAwesomeIcon icon={faCheckCircle} />\r\n          </ToDoBtn>\r\n        )}\r\n        <ToDoBtn onClick={onDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </ToDoBtn>\r\n      </BtnContainer>\r\n    </ToDoItem>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { Categories, categoryState, toDoSelector } from \"../atom\";\r\n\r\nconst Options = styled.select`\r\n  color: ${(props) => props.theme.textColor};\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  border: none;\r\n  margin: 10px 0;\r\n  font-family: Fuzzy Bubbles;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Option = styled.option`\r\n  color: ${(props) => props.theme.textColor};\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  font-family: Fuzzy Bubbles;\r\n`;\r\n\r\nfunction ToDoOptions() {\r\n  const [category, setCategory] = useRecoilState(categoryState);\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    const {\r\n      currentTarget: { value },\r\n    } = event;\r\n    setCategory(value as Categories);\r\n  };\r\n\r\n  return (\r\n    <Options onInput={onInput} value={category}>\r\n      <Option value={Categories.TO_DO}>To Do({toDos.length})</Option>\r\n      <Option value={Categories.DOING}>Doing({toDos.length})</Option>\r\n      <Option value={Categories.DONE}>Done({toDos.length})</Option>\r\n    </Options>\r\n  );\r\n}\r\n\r\nexport default ToDoOptions;\r\n","import React, { useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { toDoSelector, toDoState } from \"../atom\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport TodayTime from \"./TodayTime\";\r\nimport ToDo from \"./ToDo\";\r\nimport ToDoOptions from \"./ToDoOptions\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst ToDoListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 60%;\r\n  height: 70vh;\r\n`;\r\n\r\nconst ToDoList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  height: 90%;\r\n  border: 2px solid ${(props) => props.theme.textColor};\r\n  overflow-y: scroll;\r\n`;\r\n\r\nfunction TodoList() {\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  const toDosValue = useRecoilValue(toDoState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"TODO\", JSON.stringify(toDosValue));\r\n  }, [toDosValue]);\r\n\r\n  return (\r\n    <>\r\n      <h1>To Dos</h1>\r\n      <hr />\r\n      <Container>\r\n        <ToDoListContainer>\r\n          <ToDoOptions />\r\n          <CreateToDo />\r\n          <ToDoList>\r\n            {toDos.map((toDo) => (\r\n              <ToDo key={toDo.id} {...toDo} />\r\n            ))}\r\n          </ToDoList>\r\n        </ToDoListContainer>\r\n        <TodayTime />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#f5f6fa\",\r\n  textColor: \"#2f3640\",\r\n  accentColor: \"#44bd32\",\r\n};\r\n","import React, { useState } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport TodoList from \"./components/TodoList\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Fuzzy Bubbles', cursive;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n  padding:20px 20px;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(() => true);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <DarkModeToggle size={80} checked={isDark} onChange={setIsDark} />\n        <GlobalStyle />\n        <TodoList />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}